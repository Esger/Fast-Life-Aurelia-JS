{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/controls.js","resources/elements/life.js","resources/elements/main.js","resources/elements/settings.js","resources/elements/stats.js","resources/elements/story.js","resources/elements/tabs.js","resources/services/life-worker-service.js"],"names":["App","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ControlsCustomElement","eventAggregator","ea","startPulsor","clearPulsor","addListeners","clear","publish","stop","step","subscribe","LifeCustomElement","lifeWorkerService","statusUpdateHandle","lfWs","cellSize","cellsAlive","liferules","speedInterval","trails","running","opacity","cellCounts","lastMean","stableCountDown","gridSize","grid","showStats","speed","lifeSteps","prevSteps","cellCount","generations","clearSpace","ctx","fillStyle","fillRect","canvas","width","height","animateStep","drawCells","stable","setTimeout","cells","offScreen","ctxOffscreen","drawgrid","i","length","cell","x","y","drawImage","offScreenCanvas","canvasWidth","canvasHeight","onScreen","Math","max","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","initLife","document","getElementById","getContext","spaceWidth","floor","spaceHeight","createElement","init","setInterval","slowDown","fullSpeed","clearInterval","response","changeRules","attached","push","slice","average","arr","reduce","p","c","abs","meanOver100Gens","MainCustomElement","SettingsCustomElement","selectedPreset","presets","rule","undefined","name","cellSizeExp","minCellSize","maxCellSize","gridSizeExp","minGridSize","maxGridSize","setPreset","toggleTrails","toggleGrid","setCellSize","setGridSize","rulesSet","split","stayRulesString","newRulesString","newRules","includes","publishRules","compareToPresets","stayRules","trueIndexesString","index","map","join","rulesString","findRulesString","preset","findIndex","setRules","pow","StatsCustomElement","stackSize","StoryCustomElement","TabsCustomElement","tabs","title","active","activateTab","forEach","tab","LifeWorkerService","emptyStack","_roundStack","fillSlotPointer","maxIndex","started","w","h","wrkr","terminate","Worker","onmessage","e","data","message","workerData","postMessage","getSlotPointer","rules","getBatch","pointer","emptySlotPointer"],"mappings":";;;;;;;;;;;;;QAAaA,cAAAA,MACT,eAAc;AAAA;AACb;;;;;;;;oBCFU;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBed,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;QCMYa,gCAAAA,gCADZ;AAGG,uCAAYC,eAAZ,EAA6B;AAAA;;AACzB,iBAAKC,EAAL,GAAUD,eAAV;AACA,iBAAKE,WAAL,GAAmB,IAAnB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AACA,iBAAKC,YAAL;AACH;;wCAEDC,yBAAQ;AACJ,iBAAKJ,EAAL,CAAQK,OAAR,CAAgB,OAAhB;AACA,iBAAKH,WAAL,GAAmB,KAAnB;AACA,iBAAKD,WAAL,GAAmB,IAAnB;AACH;;wCAEDK,uBAAO;AACH,iBAAKN,EAAL,CAAQK,OAAR,CAAgB,MAAhB;AACH;;wCAEDE,uBAAO;AACH,iBAAKP,EAAL,CAAQK,OAAR,CAAgB,MAAhB;AACA,iBAAKJ,WAAL,GAAmB,KAAnB;AACH;;wCAEDN,yBAAQ;AACJ,iBAAKK,EAAL,CAAQK,OAAR,CAAgB,OAAhB;AACA,iBAAKJ,WAAL,GAAmB,KAAnB;AACH;;wCAEDE,uCAAe;AAAA;;AACX,iBAAKH,EAAL,CAAQQ,SAAR,CAAkB,UAAlB,EAA8B,oBAAY;AACtC,sBAAKN,WAAL,GAAmB,IAAnB;AACH,aAFD;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QChCQO,4BAAAA,4BADZ;AAMG,mCAAYV,eAAZ,EAA6BW,iBAA7B,EAAgD;AAAA;;AAAA,iBAHhDC,kBAGgD,GAH3B,IAG2B;;AAC5C,iBAAKX,EAAL,GAAUD,eAAV;AACA,iBAAKa,IAAL,GAAYF,iBAAZ;AACA,iBAAKG,QAAL,GAAgB,CAAhB;AACA,iBAAKC,UAAL,GAAkB,CAAlB;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACA,iBAAKC,aAAL,GAAqB,CAArB;AACA,iBAAKC,MAAL,GAAc,IAAd;AACA,iBAAKC,OAAL,GAAe,KAAf;AACA,iBAAKC,OAAL,GAAe,IAAI,KAAKF,MAAL,GAAc,GAAjC;AACA,iBAAKG,UAAL,GAAkB,EAAlB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,eAAL,GAAuB,EAAvB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,IAAL,GAAY,KAAZ;AACH;;oCAEDC,iCAAY;AACR,gBAAIC,QAAQ,KAAKC,SAAL,GAAiB,KAAKC,SAAlC;AACA,iBAAKA,SAAL,GAAiB,KAAKD,SAAtB;AACA,iBAAK3B,EAAL,CAAQK,OAAR,CAAgB,OAAhB,EAAyB;AACrBwB,2BAAW,KAAKf,UADK;AAErBgB,6BAAa,KAAKH,SAFG;AAGrBD,uBAAOA,QAAQ;AAHM,aAAzB;AAKH;;oCAEDK,mCAAa;AACT,iBAAKC,GAAL,CAASC,SAAT,GAAqB,oBAArB;AACA,iBAAKD,GAAL,CAASE,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAKC,MAAL,CAAYC,KAApC,EAA2C,KAAKD,MAAL,CAAYE,MAAvD;AACH;;oCAkBDC,qCAAc;AAAA;;AACV,iBAAKC,SAAL;AACA,gBAAI,KAAKrB,OAAL,IAAgB,CAAC,KAAKsB,MAA1B,EAAkC;AAC9BC,2BAAW,YAAM;AAAE,0BAAKH,WAAL;AAAqB,iBAAxC,EAA0C,KAAKtB,aAA/C;AACH,aAFD,MAEO;AACH,qBAAKV,IAAL;AACH;AACJ;;oCAEDiC,iCAAY;AACR,gBAAIG,QAAQ,KAAK9B,IAAL,CAAU8B,KAAtB;AACA,gBAAM7B,WAAW,KAAKA,QAAtB;AACA,gBAAM8B,YAAY,KAAKC,YAAvB;AACA,gBAAIF,KAAJ,EAAW;AACPC,0BAAUV,SAAV,GAAsB,yBAAyB,KAAKd,OAA9B,GAAwC,GAA9D;AACAwB,0BAAUT,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKC,MAAL,CAAYC,KAArC,EAA4C,KAAKD,MAAL,CAAYE,MAAxD;AACA,oBAAI,KAAKb,IAAT,EAAe;AACX,yBAAKqB,QAAL;AACH;;AAEDF,0BAAUV,SAAV,GAAsB,sBAAtB;AACA,oBAAIa,IAAIJ,MAAMK,MAAN,GAAe,CAAvB;AACA,uBAAOD,KAAK,CAAZ,EAAe;AACX,wBAAIE,OAAON,MAAMI,CAAN,CAAX,CAAqBA,KAAK,CAAL;AACrBH,8BAAUT,QAAV,CAAmBc,KAAKC,CAAL,GAASpC,QAA5B,EAAsCmC,KAAKE,CAAL,GAASrC,QAA/C,EAAyDA,QAAzD,EAAmEA,QAAnE;AACH;;AAED,qBAAKmB,GAAL,CAASmB,SAAT,CAAmB,KAAKC,eAAxB,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAAKC,WAApD,EAAiE,KAAKC,YAAtE;AACA,qBAAKxC,UAAL,GAAkB4B,MAAMK,MAAxB;AACA,qBAAKpB,SAAL,IAAkB,CAAlB;AACH;AACJ;;oCAEDkB,6BAASU,UAAU;AACf,gBAAMZ,YAAY,KAAKC,YAAvB;AACA,gBAAM/B,WAAW,KAAKA,QAAtB;AACA,gBAAMU,WAAWiC,KAAKC,GAAL,CAAS,KAAKlC,QAAd,EAAwB,CAAxB,IAA6BV,QAA9C;AACA8B,sBAAUe,SAAV,GAAsB,CAAtB;AACAf,sBAAUgB,WAAV,GAAwB,SAAxB;AACA,gBAAIT,IAAI3B,QAAR;AACA,mBAAO2B,IAAI,KAAKf,MAAL,CAAYE,MAAvB,EAA+Ba,KAAK3B,QAApC,EAA8C;AAC1CoB,0BAAUiB,SAAV;AACAjB,0BAAUkB,MAAV,CAAiB,CAAjB,EAAoBX,IAAI,GAAxB;AACAP,0BAAUmB,MAAV,CAAiB,KAAK3B,MAAL,CAAYC,KAA7B,EAAoCc,IAAI,GAAxC;AACAP,0BAAUoB,MAAV;AACApB,0BAAUqB,SAAV;AACH;AACD,gBAAIf,IAAI1B,QAAR;AACA,mBAAO0B,IAAI,KAAKd,MAAL,CAAYC,KAAvB,EAA8Ba,KAAK1B,QAAnC,EAA6C;AACzCoB,0BAAUiB,SAAV;AACAjB,0BAAUkB,MAAV,CAAiBZ,IAAI,GAArB,EAA0B,CAA1B;AACAN,0BAAUmB,MAAV,CAAiBb,IAAI,GAArB,EAA0B,KAAKd,MAAL,CAAYE,MAAtC;AACAM,0BAAUoB,MAAV;AACApB,0BAAUqB,SAAV;AACH;AACD,gBAAIT,QAAJ,EAAc;AACV,qBAAKvB,GAAL,CAASmB,SAAT,CAAmB,KAAKC,eAAxB,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAAKC,WAApD,EAAiE,KAAKC,YAAtE;AACH;AACJ;;oCAEDW,+BAAW;AAAA;;AACP,iBAAK9C,OAAL,GAAe,IAAI,KAAKF,MAAL,GAAc,GAAjC;AACA,iBAAKkB,MAAL,GAAc+B,SAASC,cAAT,CAAwB,MAAxB,CAAd;AACA,iBAAKnC,GAAL,GAAW,KAAKG,MAAL,CAAYiC,UAAZ,CAAuB,IAAvB,CAAX;AACA,iBAAKf,WAAL,GAAmB,KAAKlB,MAAL,CAAYC,KAA/B;AACA,iBAAKkB,YAAL,GAAoB,KAAKnB,MAAL,CAAYE,MAAhC;AACA,iBAAKgC,UAAL,GAAkBb,KAAKc,KAAL,CAAW,KAAKjB,WAAL,GAAmB,KAAKxC,QAAnC,CAAlB;AACA,iBAAK0D,WAAL,GAAmBf,KAAKc,KAAL,CAAW,KAAKhB,YAAL,GAAoB,KAAKzC,QAApC,CAAnB;;AAEA,iBAAKuC,eAAL,GAAuBc,SAASM,aAAT,CAAuB,QAAvB,CAAvB;AACA,iBAAKpB,eAAL,CAAqBhB,KAArB,GAA6B,KAAKiB,WAAlC;AACA,iBAAKD,eAAL,CAAqBf,MAArB,GAA8B,KAAKiB,YAAnC;AACA,iBAAKV,YAAL,GAAoB,KAAKQ,eAAL,CAAqBgB,UAArB,CAAgC,IAAhC,CAApB;AACA,iBAAKzC,SAAL,GAAiB,CAAjB;AACA,iBAAKC,SAAL,GAAiB,CAAjB;AACA,iBAAKhB,IAAL,CAAU6D,IAAV,CAAe,KAAKJ,UAApB,EAAgC,KAAKE,WAArC,EAAkD,KAAKxD,SAAvD;AACA,iBAAKT,IAAL;AACA,iBAAKK,kBAAL,GAA0B+D,YAAY,YAAM;AAAE,uBAAKjD,SAAL;AAAmB,aAAvC,EAAyC,GAAzC,CAA1B;AACH;;oCAEDkD,+BAAW;AACP,iBAAK3D,aAAL,GAAqB,GAArB;AACH;;oCAED4D,iCAAY;AACR,iBAAK5D,aAAL,GAAqB,CAArB;AACH;;oCAEDZ,yBAAQ;AACJ,iBAAKc,OAAL,GAAe,KAAf;AACA,iBAAKZ,IAAL;AACA,iBAAK2D,QAAL;AACA,iBAAKlC,UAAL;AACH;;oCAEDzB,uBAAO;AACH,iBAAKY,OAAL,GAAe,KAAf;AACA,gBAAI,KAAKP,kBAAT,EAA6B;AACzBkE,8BAAc,KAAKlE,kBAAnB;AACA,qBAAKA,kBAAL,GAA0B,IAA1B;AACH;AACJ;;oCAEDhB,yBAAQ;AACJ,iBAAKuB,OAAL,GAAe,IAAf;AACA,iBAAKoB,WAAL;AACH;;oCAEDnC,uCAAe;AAAA;;AACX,iBAAKH,EAAL,CAAQQ,SAAR,CAAkB,OAAlB,EAA2B,YAAM;AAC7B,uBAAKJ,KAAL;AACH,aAFD;AAGA,iBAAKJ,EAAL,CAAQQ,SAAR,CAAkB,MAAlB,EAA0B,YAAM;AAC5B,uBAAKF,IAAL;AACH,aAFD;AAGA,iBAAKN,EAAL,CAAQQ,SAAR,CAAkB,OAAlB,EAA2B,YAAM;AAC7B,uBAAKb,KAAL;AACH,aAFD;AAGA,iBAAKK,EAAL,CAAQQ,SAAR,CAAkB,MAAlB,EAA0B,YAAM;AAC5B,uBAAK+B,SAAL;AACH,aAFD;AAGA,iBAAKvC,EAAL,CAAQQ,SAAR,CAAkB,cAAlB,EAAkC,YAAM;AACpC,uBAAKS,MAAL,GAAc,CAAC,OAAKA,MAApB;AACA,uBAAKE,OAAL,GAAe,IAAI,OAAKF,MAAL,GAAc,GAAjC;AACH,aAHD;AAIA,iBAAKjB,EAAL,CAAQQ,SAAR,CAAkB,YAAlB,EAAgC,YAAM;AAClC,uBAAKgB,IAAL,GAAY,CAAC,OAAKA,IAAlB;AACA,oBAAI,OAAKA,IAAT,EAAe;AACX,2BAAKqB,QAAL,CAAc,IAAd;AACH;AACJ,aALD;AAMA,iBAAK7C,EAAL,CAAQQ,SAAR,CAAkB,UAAlB,EAA8B,oBAAY;AACtC,uBAAKK,QAAL,GAAgBiE,QAAhB;AACA,uBAAKb,QAAL;AACH,aAHD;AAIA,iBAAKjE,EAAL,CAAQQ,SAAR,CAAkB,UAAlB,EAA8B,oBAAY;AACtC,uBAAKe,QAAL,GAAgBuD,QAAhB;AACH,aAFD;AAGA,iBAAK9E,EAAL,CAAQQ,SAAR,CAAkB,WAAlB,EAA+B,oBAAY;AACvC,uBAAKO,SAAL,GAAiB+D,SAAS/D,SAA1B;AACA,oBAAI+D,SAASL,IAAb,EAAmB;AACf,2BAAKR,QAAL;AACH,iBAFD,MAEO;AACH,2BAAKrD,IAAL,CAAUmE,WAAV,CAAsB,OAAKhE,SAA3B;AACH;AACJ,aAPD;AAQH;;oCAEDiE,+BAAW;AACP,iBAAK7E,YAAL;AACH;;;;gCAtKqB;AAClB,qBAAKiB,UAAL,CAAgB6D,IAAhB,CAAqB,KAAKnE,UAA1B;AACA,qBAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgB8D,KAAhB,CAAsB,CAAC,GAAvB,CAAlB;AACA,oBAAMC,UAAU,SAAVA,OAAU;AAAA,2BAAOC,IAAIC,MAAJ,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,+BAAUD,IAAIC,CAAd;AAAA,qBAAX,EAA4B,CAA5B,IAAiCH,IAAIrC,MAA5C;AAAA,iBAAhB;AACA,uBAAOoC,QAAQ,KAAK/D,UAAb,CAAP;AACH;;;gCAEY;AACT,oBAAIoC,KAAKgC,GAAL,CAAS,KAAKC,eAAL,GAAuB,KAAK3E,UAArC,IAAmD,CAAvD,EAA0D;AACtD,yBAAKQ,eAAL,IAAwB,CAAxB;AACH,iBAFD,MAEO;AACH,yBAAKA,eAAL,GAAuB,EAAvB;AACH;AACD,uBAAO,KAAKA,eAAL,IAAwB,CAA/B;AACH;;;;;;;;;;;;;;;;;;;QC5DQoE,4BAAAA,oBACT,6BAAc;AAAA;AAEb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCMQC,gCAAAA,gCAFZ;AAIG,uCAAY5F,eAAZ,EAA6B;AAAA;;AACzB,iBAAKC,EAAL,GAAUD,eAAV;AACA,iBAAKgB,SAAL,GAAiB,EAAjB;AACA,iBAAK6E,cAAL,GAAsB,CAAtB;AACA,iBAAKC,OAAL,GAAe,CACX,EAAEC,MAAMC,SAAR,EAAmBC,MAAM,EAAzB,EADW,EAEX,EAAEF,MAAM,QAAR,EAAkBE,MAAM,WAAxB,EAFW,EAGX,EAAEF,MAAM,OAAR,EAAiBE,MAAM,SAAvB,EAHW,EAIX,EAAEF,MAAM,UAAR,EAAoBE,MAAM,QAA1B,EAJW,EAKX,EAAEF,MAAM,UAAR,EAAoBE,MAAM,cAA1B,EALW,EAMX,EAAEF,MAAM,YAAR,EAAsBE,MAAM,cAA5B,EANW,EAOX,EAAEF,MAAM,MAAR,EAAgBE,MAAM,qBAAtB,EAPW,EAQX,EAAEF,MAAM,SAAR,EAAmBE,MAAM,OAAzB,EARW,EASX,EAAEF,MAAM,YAAR,EAAsBE,MAAM,iBAA5B,EATW,EAUX,EAAEF,MAAM,YAAR,EAAsBE,MAAM,UAA5B,EAVW,EAWX,EAAEF,MAAM,aAAR,EAAuBE,MAAM,QAA7B,EAXW,EAYX,EAAEF,MAAM,KAAR,EAAeE,MAAM,OAArB,EAZW,EAaX,EAAEF,MAAM,OAAR,EAAiBE,MAAM,WAAvB,EAbW,EAeX,EAAEF,MAAM,OAAR,EAAiBE,MAAM,WAAvB,EAfW,EAgBX,EAAEF,MAAM,SAAR,EAAmBE,MAAM,MAAzB,EAhBW,EAiBX,EAAEF,MAAM,QAAR,EAAkBE,MAAM,WAAxB,EAjBW,EAkBX,EAAEF,MAAM,SAAR,EAAmBE,MAAM,MAAzB,EAlBW,EAmBX,EAAEF,MAAM,SAAR,EAAmBE,MAAM,aAAzB,EAnBW,EAoBX,EAAEF,MAAM,WAAR,EAAqBE,MAAM,YAA3B,EApBW,EAqBX,EAAEF,MAAM,IAAR,EAAcE,MAAM,OAApB,EArBW,EAsBX,EAAEF,MAAM,MAAR,EAAgBE,MAAM,YAAtB,EAtBW,EAuBX,EAAEF,MAAM,aAAR,EAAuBE,MAAM,QAA7B,EAvBW,EAwBX,EAAEF,MAAM,YAAR,EAAsBE,MAAM,eAA5B,EAxBW,CAAf;AA0BA,iBAAK/E,MAAL,GAAc,IAAd;AACA,iBAAKgF,WAAL,GAAmB,CAAnB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAK3E,IAAL,GAAY,KAAZ;AACA,iBAAK4E,WAAL,GAAmB,CAAnB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,SAAL;AACH;;wCAUDC,uCAAe;AACX,iBAAKxG,EAAL,CAAQK,OAAR,CAAgB,cAAhB,EAAgC,KAAKY,MAArC;AACH;;wCAEDwF,mCAAa;AACT,iBAAKzG,EAAL,CAAQK,OAAR,CAAgB,YAAhB,EAA8B,KAAKmB,IAAnC;AACH;;wCAEDkF,qCAAc;AACV,iBAAK1G,EAAL,CAAQK,OAAR,CAAgB,UAAhB,EAA4B,KAAKQ,QAAjC;AACH;;wCAED8F,qCAAc;AACV,iBAAK3G,EAAL,CAAQK,OAAR,CAAgB,UAAhB,EAA4B,KAAKkB,QAAjC;AACH;;wCAEDgF,iCAAY;AACR,gBAAI,KAAKX,cAAL,GAAsB,CAA1B,EAA6B;AACzB,oBAAIgB,WAAW,KAAKf,OAAL,CAAa,KAAKD,cAAlB,EAAkCE,IAAlC,CAAuCe,KAAvC,CAA6C,GAA7C,CAAf;AACA,oBAAIC,kBAAkBF,SAAS,CAAT,CAAtB;AACA,oBAAIG,iBAAiBH,SAAS,CAAT,CAArB;AACA,oBAAII,WAAW,EAAf;AACA,oBAAIlE,IAAI,CAAR;AACA,qBAAK,IAAIA,KAAI,CAAb,EAAgBA,KAAI,CAApB,EAAuBA,IAAvB,EAA4B;AACxBkE,6BAASlE,EAAT,IAAciE,eAAeE,QAAf,CAAwBnE,EAAxB,CAAd;AACAkE,6BAASlE,KAAI,EAAb,IAAmBgE,gBAAgBG,QAAhB,CAAyBnE,EAAzB,CAAnB;AACH;AACD,qBAAK/B,SAAL,GAAiBiG,QAAjB;AACA,qBAAKE,YAAL,CAAkB,KAAlB;AACH;AACJ;;wCAEDA,qCAAazC,MAAM;AACf,iBAAKzE,EAAL,CAAQK,OAAR,CAAgB,WAAhB,EAA6B;AACzBU,2BAAW,KAAKA,SADS;AAEzB0D,sBAAMA;AAFmB,aAA7B;AAIH;;wCAED0C,+CAAmB;AACf,gBAAIH,WAAW,KAAKjG,SAAL,CAAemE,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAAf;AACA,gBAAIkC,YAAY,KAAKrG,SAAL,CAAemE,KAAf,CAAqB,EAArB,EAAyB,EAAzB,CAAhB;AACA,gBAAImC,oBAAoB,SAApBA,iBAAoB,CAACvB,IAAD,EAAOwB,KAAP,EAAiB;AACrC,uBAAOxB,OAAOwB,KAAP,GAAe,EAAtB;AACH,aAFD;AAGA,gBAAIR,kBAAkBM,UAAUG,GAAV,CAAcF,iBAAd,EAAiCG,IAAjC,CAAsC,EAAtC,CAAtB;AACA,gBAAIT,iBAAiBC,SAASO,GAAT,CAAaF,iBAAb,EAAgCG,IAAhC,CAAqC,EAArC,CAArB;AACA,gBAAIC,cAAcX,kBAAkB,GAAlB,GAAwBC,cAA1C;AACA,gBAAIW,kBAAkB,SAAlBA,eAAkB,SAAU;AAAE,uBAAOC,OAAO7B,IAAP,IAAe2B,WAAtB;AAAoC,aAAtE;AACA,gBAAIH,QAAQ,KAAKzB,OAAL,CAAa+B,SAAb,CAAuBF,eAAvB,CAAZ;AACA,iBAAK9B,cAAL,GAAuB0B,QAAQ,CAAC,CAAV,GAAeA,KAAf,GAAuBvB,SAA7C;AACH;;wCAED8B,6BAAS/E,GAAG;AACR,iBAAK/B,SAAL,CAAe+B,CAAf,IAAoB,CAAC,KAAK/B,SAAL,CAAe+B,CAAf,CAArB;AACA,iBAAKqE,gBAAL;AACA,iBAAKD,YAAL,CAAkB,KAAlB;AACH;;wCAEDlC,+BAAW;AACP,iBAAKkC,YAAL,CAAkB,IAAlB;AACH;;;;gCArEc;AACX,uBAAO1D,KAAKsE,GAAL,CAAS,CAAT,EAAY,KAAK7B,WAAjB,CAAP;AACH;;;gCAEc;AACX,uBAAOzC,KAAKsE,GAAL,CAAS,CAAT,EAAY,KAAK1B,WAAjB,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;;QClDQ2B,6BAAAA,6BADZ;AAGG,oCAAYhI,eAAZ,EAA6B;AAAA;;AACzB,iBAAKC,EAAL,GAAUD,eAAV;AACA,iBAAK2B,KAAL,GAAa,CAAb;AACA,iBAAKsG,SAAL,GAAiB,CAAjB;AACA,iBAAKnG,SAAL,GAAiB,CAAjB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACH;;qCAED3B,uCAAe;AAAA;;AACX,iBAAKH,EAAL,CAAQQ,SAAR,CAAkB,OAAlB,EAA2B,oBAAY;AACnC,sBAAKqB,SAAL,GAAiBiD,SAASjD,SAA1B;AACA,sBAAKC,WAAL,GAAmBgD,SAAShD,WAA5B;AACA,sBAAKJ,KAAL,GAAaoD,SAASpD,KAAtB;AACA,sBAAKsG,SAAL,GAAiBlD,SAASkD,SAA1B;AACH,aALD;AAMH;;qCAEDhD,+BAAW;AACP,iBAAK7E,YAAL;AACH;;;;;;;;;;;;;;;;;;MC7BQ8H,6BAAAA;;;;;;;;;;;;;;;;;;;;QCSAC,4BAAAA,4BAFZ;AAIG,mCAAYnI,eAAZ,EAA6B;AAAA;;AACzB,iBAAKoI,IAAL,GAAY,CACR;AACIC,uBAAO,YADX;AAEIC,wBAAQ;AAFZ,aADQ,EAKR;AACID,uBAAO,OADX;AAEIC,wBAAQ;AAFZ,aALQ,CAAZ;AAUH;;oCAEDC,mCAAYxF,GAAG;AACX,gBAAIqF,OAAO,KAAKA,IAAL,CAAUjD,KAAV,EAAX;AACAiD,iBAAKI,OAAL,CAAa,eAAO;AAChBC,oBAAIH,MAAJ,GAAa,KAAb;AACH,aAFD;AAGAF,iBAAKrF,CAAL,EAAQuF,MAAR,GAAiB,IAAjB;AACA,iBAAKF,IAAL,GAAYA,IAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrBQM,4BAAAA,4BAFZ;AAIG,mCAAY1I,eAAZ,EAA6B;AAAA;;AACzB,iBAAKC,EAAL,GAAUD,eAAV;;AAEA,iBAAK2I,UAAL,GAAkB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,CAAlB;AACA,iBAAKC,WAAL,GAAmB,KAAKD,UAAL,CAAgBxD,KAAhB,EAAnB;AACA,iBAAK0D,eAAL,GAAuB,CAAvB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,OAAL,GAAe,KAAf;AACH;;oCAiBDrE,qBAAKsE,GAAGC,GAAGjI,WAAW;AAAA;;AAClB,gBAAI,KAAKkI,IAAT,EAAe;AACX,qBAAKA,IAAL,CAAUC,SAAV;AACH;AACD,iBAAKD,IAAL,GAAY,IAAIE,MAAJ,CAAW,yBAAX,CAAZ;AACA,iBAAKP,eAAL,GAAuB,CAAvB;AACA,iBAAKK,IAAL,CAAUG,SAAV,GAAsB,UAACC,CAAD,EAAO;AACzB,oBAAIA,EAAEC,IAAF,IAAUD,EAAEC,IAAF,CAAOC,OAAP,IAAkB,eAAhC,EAAiD;AAC7C,0BAAKZ,WAAL,CAAiB,MAAKC,eAAtB,IAAyCS,EAAEC,IAAF,CAAO5G,KAAhD;AACA,0BAAKkG,eAAL,GAAuB,CAAC,MAAKA,eAAL,GAAuB,CAAxB,IAA6B,MAAKD,WAAL,CAAiB5F,MAArE;AACH;AACJ,aALD;AAMA,iBAAK4F,WAAL,GAAmB,KAAKD,UAAL,CAAgBxD,KAAhB,EAAnB;AACA,gBAAIsE,aAAa;AACbD,yBAAS,YADI;AAEbR,mBAAGA,CAFU;AAGbC,mBAAGA,CAHU;AAIbjI,2BAAWA;AAJE,aAAjB;AAMA,iBAAKkI,IAAL,CAAUQ,WAAV,CAAsBD,UAAtB;AACA,iBAAKE,cAAL,GAAsB,CAAtB;AACA,iBAAKf,WAAL,CAAiBJ,OAAjB,CAAyB,gBAAQ;AAC7B,sBAAKU,IAAL,CAAUQ,WAAV,CAAsB,EAAEF,SAAS,QAAX,EAAtB;AACH,aAFD;AAGH;;oCAEDxE,mCAAY4E,OAAO;AACf,gBAAIH,aAAa;AACbD,yBAAS,OADI;AAEbI,uBAAOA;AAFM,aAAjB;AAIA,iBAAKV,IAAL,CAAUQ,WAAV,CAAsBD,UAAtB;AACH;;oCAEDI,6BAASlH,OAAO;AACZ,gBAAI8G,aAAa;AACbD,yBAAS;AADI,aAAjB;AAGA,iBAAKN,IAAL,CAAUQ,WAAV,CAAsBD,UAAtB;AACH;;;;gCAtDW;AAAA;;AACR,oBAAIK,UAAU,KAAKH,cAAnB;AACA,qBAAKA,cAAL,GAAsB,CAAC,KAAKA,cAAL,GAAsB,CAAvB,IAA4B,KAAKf,WAAL,CAAiB5F,MAAnE;AACA,oBAAI,KAAK+F,OAAT,EAAkB;AACd,wBAAIgB,mBAAoBD,WAAW,CAAZ,GAAiB,KAAKhB,QAAtB,GAAiCgB,UAAU,CAAlE;AACApH,+BAAW,YAAM;AAAE,+BAAKmH,QAAL;AAAkB,qBAArC;AACH;AACD,qBAAKd,OAAL,GAAe,IAAf;AACA,uBAAO,KAAKH,WAAL,CAAiBkB,OAAjB,CAAP;AACH;;;gCAEe;AACZ,uBAAO,KAAKlB,WAAL,CAAiB5F,MAAxB;AACH","file":"app-bundle.js","sourcesContent":["export class App {\n    constructor() {\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class ControlsCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.startPulsor = true;\n        this.clearPulsor = false;\n        this.addListeners();\n    }\n\n    clear() {\n        this.ea.publish('clear');\n        this.clearPulsor = false;\n        this.startPulsor = true;\n    }\n\n    stop() {\n        this.ea.publish('stop');\n    }\n\n    step() {\n        this.ea.publish('step');\n        this.startPulsor = false;\n    }\n\n    start() {\n        this.ea.publish('start');\n        this.startPulsor = false;\n    }\n\n    addListeners() {\n        this.ea.subscribe('cellSize', response => {\n            this.clearPulsor = true;\n        });\n    }\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport { LifeWorkerService } from 'resources/services/life-worker-service';\n\n@inject(EventAggregator, LifeWorkerService)\nexport class LifeCustomElement {\n\n    statusUpdateHandle = null;\n\n    // TODO try this https://hacks.mozilla.org/2011/12/faster-canvas-pixel-manipulation-with-typed-arrays/\n    constructor(eventAggregator, lifeWorkerService) {\n        this.ea = eventAggregator;\n        this.lfWs = lifeWorkerService;\n        this.cellSize = 2;\n        this.cellsAlive = 0;\n        this.liferules = [];\n        this.speedInterval = 0;\n        this.trails = true;\n        this.running = false;\n        this.opacity = 1 - this.trails * 0.9;\n        this.cellCounts = [];\n        this.lastMean = 0;\n        this.stableCountDown = 20;\n        this.gridSize = 8;\n        this.grid = false;\n    }\n\n    showStats() {\n        let speed = this.lifeSteps - this.prevSteps;\n        this.prevSteps = this.lifeSteps;\n        this.ea.publish('stats', {\n            cellCount: this.cellsAlive,\n            generations: this.lifeSteps,\n            speed: speed * 2\n        });\n    }\n\n    clearSpace() {\n        this.ctx.fillStyle = \"rgb(255, 255, 255)\";\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    get meanOver100Gens() {\n        this.cellCounts.push(this.cellsAlive);\n        this.cellCounts = this.cellCounts.slice(-100);\n        const average = arr => arr.reduce((p, c) => p + c, 0) / arr.length;\n        return average(this.cellCounts);\n    }\n\n    get stable() {\n        if (Math.abs(this.meanOver100Gens - this.cellsAlive) < 7) {\n            this.stableCountDown -= 1;\n        } else {\n            this.stableCountDown = 20;\n        }\n        return this.stableCountDown <= 0;\n    }\n\n    animateStep() {\n        this.drawCells();\n        if (this.running && !this.stable) {\n            setTimeout(() => { this.animateStep(); }, this.speedInterval);\n        } else {\n            this.stop();\n        }\n    }\n\n    drawCells() {\n        let cells = this.lfWs.cells;\n        const cellSize = this.cellSize;\n        const offScreen = this.ctxOffscreen;\n        if (cells) {\n            offScreen.fillStyle = \"rgba(255, 255, 255, \" + this.opacity + \")\";\n            offScreen.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            if (this.grid) {\n                this.drawgrid();\n            }\n\n            offScreen.fillStyle = \"rgba(128, 128, 0, 1)\";\n            let i = cells.length - 1;\n            while (i >= 0) {\n                let cell = cells[i]; i -= 1;\n                offScreen.fillRect(cell.x * cellSize, cell.y * cellSize, cellSize, cellSize);\n            }\n\n            this.ctx.drawImage(this.offScreenCanvas, 0, 0, this.canvasWidth, this.canvasHeight);\n            this.cellsAlive = cells.length;\n            this.lifeSteps += 1;\n        }\n    }\n\n    drawgrid(onScreen) {\n        const offScreen = this.ctxOffscreen;\n        const cellSize = this.cellSize;\n        const gridSize = Math.max(this.gridSize, 2) * cellSize;\n        offScreen.lineWidth = 1;\n        offScreen.strokeStyle = \"#c2c2c2\";\n        let y = gridSize;\n        for (; y < this.canvas.height; y += gridSize) {\n            offScreen.beginPath();\n            offScreen.moveTo(0, y - 0.5);\n            offScreen.lineTo(this.canvas.width, y - 0.5);\n            offScreen.stroke();\n            offScreen.closePath();\n        }\n        let x = gridSize;\n        for (; x < this.canvas.width; x += gridSize) {\n            offScreen.beginPath();\n            offScreen.moveTo(x - 0.5, 0);\n            offScreen.lineTo(x - 0.5, this.canvas.height);\n            offScreen.stroke();\n            offScreen.closePath();\n        }\n        if (onScreen) {\n            this.ctx.drawImage(this.offScreenCanvas, 0, 0, this.canvasWidth, this.canvasHeight);\n        }\n    }\n\n    initLife() {\n        this.opacity = 1 - this.trails * 0.9;\n        this.canvas = document.getElementById('life');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvasWidth = this.canvas.width;\n        this.canvasHeight = this.canvas.height;\n        this.spaceWidth = Math.floor(this.canvasWidth / this.cellSize);\n        this.spaceHeight = Math.floor(this.canvasHeight / this.cellSize);\n\n        this.offScreenCanvas = document.createElement('canvas');\n        this.offScreenCanvas.width = this.canvasWidth;\n        this.offScreenCanvas.height = this.canvasHeight;\n        this.ctxOffscreen = this.offScreenCanvas.getContext('2d');\n        this.lifeSteps = 0; // Number of iterations / steps done\n        this.prevSteps = 0;\n        this.lfWs.init(this.spaceWidth, this.spaceHeight, this.liferules);\n        this.stop();\n        this.statusUpdateHandle = setInterval(() => { this.showStats(); }, 500);\n    }\n\n    slowDown() {\n        this.speedInterval = 500;\n    }\n\n    fullSpeed() {\n        this.speedInterval = 0;\n    }\n\n    clear() {\n        this.running = false;\n        this.stop();\n        this.initLife();\n        this.clearSpace();\n    }\n\n    stop() {\n        this.running = false;\n        if (this.statusUpdateHandle) {\n            clearInterval(this.statusUpdateHandle);\n            this.statusUpdateHandle = null;\n        }\n    }\n\n    start() {\n        this.running = true;\n        this.animateStep();\n    }\n\n    addListeners() {\n        this.ea.subscribe('clear', () => {\n            this.clear();\n        });\n        this.ea.subscribe('stop', () => {\n            this.stop();\n        });\n        this.ea.subscribe('start', () => {\n            this.start();\n        });\n        this.ea.subscribe('step', () => {\n            this.drawCells();\n        });\n        this.ea.subscribe('toggleTrails', () => {\n            this.trails = !this.trails;\n            this.opacity = 1 - this.trails * 0.9;\n        });\n        this.ea.subscribe('toggleGrid', () => {\n            this.grid = !this.grid;\n            if (this.grid) {\n                this.drawgrid(true);\n            }\n        });\n        this.ea.subscribe('cellSize', response => {\n            this.cellSize = response;\n            this.initLife();\n        });\n        this.ea.subscribe('gridSize', response => {\n            this.gridSize = response;\n        });\n        this.ea.subscribe('lifeRules', response => {\n            this.liferules = response.liferules;\n            if (response.init) {\n                this.initLife();\n            } else {\n                this.lfWs.changeRules(this.liferules);\n            }\n        });\n    }\n\n    attached() {\n        this.addListeners();\n    }\n\n\n}","export class MainCustomElement {\n    constructor() {\n\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class SettingsCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.liferules = [];\n        this.selectedPreset = 6;\n        this.presets = [\n            { rule: undefined, name: '' },\n            { rule: \"125/36\", name: \"2&times;2\" },\n            { rule: \"34/34\", name: \"34 Life\" },\n            { rule: \"1358/357\", name: \"Amoeba\" },\n            { rule: \"4567/345\", name: \"Assimilation\" },\n            { rule: \"235678/378\", name: \"Coagulations\" },\n            { rule: \"23/3\", name: \"Conway&rsquo;s Life\" },\n            { rule: \"45678/3\", name: \"Coral\" },\n            { rule: \"34678/3678\", name: \"Day &amp; Night\" },\n            { rule: \"5678/35678\", name: \"Diamoeba\" },\n            { rule: \"012345678/3\", name: \"Flakes\" },\n            { rule: \"1/1\", name: \"Gnarl\" },\n            { rule: \"23/36\", name: \"High Life\" },\n            // { rule: \"34678/0123478/2\", name: \"Inverse Life\" }, \n            { rule: \"5/345\", name: \"Long Life\" },\n            { rule: \"12345/3\", name: \"Maze\" },\n            { rule: \"1234/3\", name: \"Mazectric\" },\n            { rule: \"245/368\", name: \"Move\" },\n            { rule: \"238/357\", name: \"Pseudo Life\" },\n            { rule: \"1357/1357\", name: \"Replicator\" },\n            { rule: \"/2\", name: \"Seeds\" },\n            { rule: \"/234\", name: \"Serviettes\" },\n            { rule: \"235678/3678\", name: \"Stains\" },\n            { rule: \"2345/45678\", name: \"Walled Cities\" },\n        ];\n        this.trails = true;\n        this.cellSizeExp = 1;\n        this.minCellSize = 0;\n        this.maxCellSize = 5;\n        this.grid = false;\n        this.gridSizeExp = 3;\n        this.minGridSize = 2;\n        this.maxGridSize = 5;\n        this.setPreset();\n    }\n\n    get cellSize() {\n        return Math.pow(2, this.cellSizeExp);\n    }\n\n    get gridSize() {\n        return Math.pow(2, this.gridSizeExp);\n    }\n\n    toggleTrails() {\n        this.ea.publish('toggleTrails', this.trails);\n    }\n\n    toggleGrid() {\n        this.ea.publish('toggleGrid', this.grid);\n    }\n\n    setCellSize() {\n        this.ea.publish('cellSize', this.cellSize);\n    }\n\n    setGridSize() {\n        this.ea.publish('gridSize', this.gridSize);\n    }\n\n    setPreset() {\n        if (this.selectedPreset > 0) {\n            let rulesSet = this.presets[this.selectedPreset].rule.split('/');\n            let stayRulesString = rulesSet[0];\n            let newRulesString = rulesSet[1];\n            let newRules = [];\n            let i = 0;\n            for (let i = 0; i < 9; i++) {\n                newRules[i] = newRulesString.includes(i);\n                newRules[i + 10] = stayRulesString.includes(i);\n            }\n            this.liferules = newRules;\n            this.publishRules(false);\n        }\n    }\n\n    publishRules(init) {\n        this.ea.publish('lifeRules', {\n            liferules: this.liferules,\n            init: init\n        });\n    }\n\n    compareToPresets() {\n        let newRules = this.liferules.slice(0, 9);\n        let stayRules = this.liferules.slice(10, 19);\n        let trueIndexesString = (rule, index) => {\n            return rule ? index : '';\n        };\n        let stayRulesString = stayRules.map(trueIndexesString).join('');\n        let newRulesString = newRules.map(trueIndexesString).join('');\n        let rulesString = stayRulesString + '/' + newRulesString;\n        let findRulesString = preset => { return preset.rule == rulesString; };\n        let index = this.presets.findIndex(findRulesString);\n        this.selectedPreset = (index > -1) ? index : undefined;\n    }\n\n    setRules(i) {\n        this.liferules[i] = !this.liferules[i];\n        this.compareToPresets();\n        this.publishRules(false);\n    }\n\n    attached() {\n        this.publishRules(true);\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatsCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.speed = 0;\n        this.stackSize = 0;\n        this.cellCount = 0;\n        this.generations = 0;\n    }\n\n    addListeners() {\n        this.ea.subscribe('stats', response => {\n            this.cellCount = response.cellCount;\n            this.generations = response.generations;\n            this.speed = response.speed;\n            this.stackSize = response.stackSize;\n        });\n    }\n\n    attached() {\n        this.addListeners();\n    }\n\n}","export class StoryCustomElement { }","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class TabsCustomElement {\n\n    constructor(eventAggregator) {\n        this.tabs = [\n            {\n                title: 'Life Rules',\n                active: true\n            },\n            {\n                title: 'Story',\n                active: false\n            }\n        ]\n    }\n\n    activateTab(i) {\n        let tabs = this.tabs.slice();\n        tabs.forEach(tab => {\n            tab.active = false;\n        });\n        tabs[i].active = true;\n        this.tabs = tabs;\n    }\n\n}","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class LifeWorkerService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n\n        this.emptyStack = [[], [], [], [], [], [], [], [], [], []];\n        this._roundStack = this.emptyStack.slice();\n        this.fillSlotPointer = 0;\n        this.maxIndex = 9;\n        this.started = false;\n    }\n\n    get cells() {\n        let pointer = this.getSlotPointer;\n        this.getSlotPointer = (this.getSlotPointer + 1) % this._roundStack.length;\n        if (this.started) {\n            let emptySlotPointer = (pointer == 0) ? this.maxIndex : pointer - 1;\n            setTimeout(() => { this.getBatch(); });\n        }\n        this.started = true;\n        return this._roundStack[pointer];\n    }\n\n    get stackSize() {\n        return this._roundStack.length;\n    }\n\n    init(w, h, liferules) {\n        if (this.wrkr) {\n            this.wrkr.terminate();\n        }\n        this.wrkr = new Worker('./assets/life-worker.js');\n        this.fillSlotPointer = 0;\n        this.wrkr.onmessage = (e) => {\n            if (e.data && e.data.message == 'newGeneration') {\n                this._roundStack[this.fillSlotPointer] = e.data.cells;\n                this.fillSlotPointer = (this.fillSlotPointer + 1) % this._roundStack.length;\n            }\n        };\n        this._roundStack = this.emptyStack.slice();\n        let workerData = {\n            message: 'initialize',\n            w: w,\n            h: h,\n            liferules: liferules\n        };\n        this.wrkr.postMessage(workerData);\n        this.getSlotPointer = 0;\n        this._roundStack.forEach(slot => {\n            this.wrkr.postMessage({ message: 'resume' });\n        });\n    }\n\n    changeRules(rules) {\n        let workerData = {\n            message: 'rules',\n            rules: rules\n        };\n        this.wrkr.postMessage(workerData);\n    }\n\n    getBatch(cells) {\n        let workerData = {\n            message: 'resume'\n        };\n        this.wrkr.postMessage(workerData);\n    }\n\n}\n"],"sourceRoot":"../src"}