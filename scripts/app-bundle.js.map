{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/life.js","resources/elements/main.js","resources/services/life-worker-service.js"],"names":["App","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","LifeCustomElement","lifeWorkerService","lfWs","cellSize","cellsAlive","fillRatio","trails","calcSpeed","speed","lifeSteps","prevSteps","clearSpace","ctx","fillStyle","fillRect","canvas","width","height","drawCells","cells","count","length","i","x","y","fadeCells","opacity","drawFromStack","requestAnimationFrame","initLife","document","getElementById","getContext","canvasWidth","canvasHeight","spaceWidth","Math","floor","spaceHeight","liferules","init","attached","MainCustomElement","LifeWorkerService","eventAggregator","ea","_lifeStack","wrkr","Worker","onmessage","e","data","push","w","h","rules","workerData","postMessage","shift"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\n// import {\n//     EventAggregator\n// } from 'aurelia-event-aggregator';\n\n// @inject(EventAggregator)\n\n\nimport { LifeWorkerService } from 'resources/services/life-worker-service';\n\n@inject(LifeWorkerService)\nexport class LifeCustomElement {\n\n    // TODO try this https://hacks.mozilla.org/2011/12/faster-canvas-pixel-manipulation-with-typed-arrays/\n    constructor(lifeWorkerService) {\n        this.lfWs = lifeWorkerService;\n        this.cellSize = 2;\n        this.cellsAlive = 0;\n        this.fillRatio = 20;\n        this.trails = true;\n    }\n\n    calcSpeed() {\n        this.speed = this.lifeSteps - this.prevSteps;\n        this.prevSteps = this.lifeSteps;\n    }\n\n    clearSpace() {\n        this.ctx.fillStyle = \"rgb(255, 255, 255)\";\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    // TODO draw on second canvas, then put that on the visible canvas\n    drawCells(cells) {\n        this.ctx.fillStyle = \"rgb(128, 128, 0)\";\n        const count = cells.length;\n        let i = 0;\n        for (; i < count; i += 1) {\n            this.ctx.fillRect(cells[i].x * this.cellSize, cells[i].y * this.cellSize, this.cellSize, this.cellSize);\n        }\n        this.cellsAlive = cells.length;\n    }\n\n    fadeCells() {\n        let opacity = this.trails * 1 * 0.5;\n        this.ctx.fillStyle = \"rgba(255, 255, 255, \" + opacity + \")\";\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    drawFromStack() {\n        let cells = this.lfWs.cells;\n        if (cells) {\n            this.fadeCells();\n            this.drawCells(cells);\n        }\n        requestAnimationFrame(() => { this.drawFromStack(); });\n    }\n\n    initLife() {\n        this.canvas = document.getElementById('life');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvasWidth = this.canvas.width;\n        this.canvasHeight = this.canvas.height;\n        this.spaceWidth = Math.floor(this.canvasWidth / this.cellSize);\n        this.spaceHeight = Math.floor(this.canvasHeight / this.cellSize);\n        this.liferules = [\n            false, false, false, true, false, false, false, false, false, false,\n            false, false, true, true, false, false, false, false, false\n        ];\n        this.lifeSteps = 0; // Number of iterations / steps done\n        this.prevSteps = 0;\n        this.lfWs.init(this.spaceWidth, this.spaceHeight, this.liferules);\n        requestAnimationFrame(() => { this.drawFromStack(); });\n    }\n\n    attached() {\n        this.initLife();\n    }\n\n\n}","export class MainCustomElement {\n    constructor() {\n\n    }\n}","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class LifeWorkerService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n\n        this._lifeStack = [];\n        this.wrkr = new Worker('./assets/life-worker.js');\n        this.wrkr.onmessage = (e) => {\n            // push Generation on stack\n            if (e.data && e.data.cells) {\n                this._lifeStack.push(e.data.cells);\n            }\n            // this.ea.publish('newGeneration', e.data);\n        };\n    }\n\n    get cells() {\n        return this._lifeStack.shift();\n    }\n\n    init(w, h, rules, cells) {\n        let workerData = {\n            message: 'start',\n            w: w,\n            h: h,\n            rules: rules,\n            cells: cells\n        };\n        this.wrkr.postMessage(workerData);\n    }\n\n    // getDirection(player, targetPositions) {\n    //     this.mzWrkr.postMessage({\n    //         message: 'getDirection',\n    //         player: player,\n    //         targetPositions: targetPositions\n    //     });\n    // }\n\n}\n"],"sourceRoot":"../src"}