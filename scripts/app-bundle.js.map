{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/controls.js","resources/elements/life.js","resources/elements/main.js","resources/elements/stats.js","resources/services/life-worker-service.js"],"names":["App","message","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","ControlsCustomElement","eventAggregator","ea","trails","clear","publish","continue","random","step","stop","toggleTrails","LifeCustomElement","lifeWorkerService","lfWs","cellSize","cellsAlive","fillRatio","speedHandle","countGenerations","speed","lifeSteps","prevSteps","stackSize","clearSpace","ctx","fillStyle","fillRect","canvas","width","height","drawCells","cells","ctxOffscreen","count","length","i","x","y","drawImage","offScreenCanvas","canvasWidth","canvasHeight","fadeCells","opacity","drawFromStack","setTimeout","initLife","document","getElementById","getContext","spaceWidth","Math","floor","spaceHeight","createElement","liferules","init","setInterval","addListeners","subscribe","getBatch","attached","MainCustomElement","StatsCustomElement","response","LifeWorkerService","_lifeStack","stackCheckHandle","stackLowCheckHandle","wrkr","Worker","onmessage","e","data","push","keepStack","w","h","rules","workerData","generations","postMessage","minStackSize","console","log","clearInterval","shift"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class ControlsCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.trails = false;\n    }\n\n    clear() {\n        this.ea.publish('clear');\n    }\n    continue() {\n        this.ea.publish('continue');\n    }\n    random() {\n        this.ea.publish('startRandom');\n    }\n    start() {\n        this.ea.publish('start');\n    }\n    step() {\n        this.ea.publish('step');\n    }\n    stop() {\n        this.ea.publish('stop');\n    }\n    toggleTrails() {\n        this.trails = !this.trails;\n        this.ea.publish('toggleTrails', this.trails);\n    }\n\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\nimport { LifeWorkerService } from 'resources/services/life-worker-service';\n\n@inject(EventAggregator, LifeWorkerService)\nexport class LifeCustomElement {\n\n    // TODO try this https://hacks.mozilla.org/2011/12/faster-canvas-pixel-manipulation-with-typed-arrays/\n    constructor(eventAggregator, lifeWorkerService) {\n        this.ea = eventAggregator;\n        this.lfWs = lifeWorkerService;\n        this.cellSize = 1;\n        this.cellsAlive = 0;\n        this.fillRatio = 20;\n        this.trails = true;\n        this.speedHandle = null;\n    }\n\n    countGenerations() {\n        this.speed = this.lifeSteps - this.prevSteps;\n        this.prevSteps = this.lifeSteps;\n        this.ea.publish('stats', {\n            speed: this.speed,\n            stackSize: this.lfWs.stackSize\n        });\n    }\n\n    clearSpace() {\n        this.ctx.fillStyle = \"rgb(255, 255, 255)\";\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    // TODO draw on second canvas, then put that on the visible canvas\n    drawCells(cells) {\n        this.ctxOffscreen.fillStyle = \"rgb(128, 128, 0)\";\n        const count = cells.length;\n        let i = 0;\n        for (; i < count; i += 1) {\n            this.ctxOffscreen.fillRect(cells[i].x * this.cellSize, cells[i].y * this.cellSize, this.cellSize, this.cellSize);\n        }\n        this.ctx.drawImage(this.offScreenCanvas, 0, 0, this.canvasWidth, this.canvasHeight);\n        this.cellsAlive = cells.length;\n    }\n\n    fadeCells() {\n        let opacity = this.trails * 1 * 0.5;\n        this.ctxOffscreen.fillStyle = \"rgba(255, 255, 255, \" + opacity + \")\";\n        this.ctxOffscreen.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    drawFromStack() {\n        let cells = this.lfWs.cells;\n        if (cells) {\n            this.lifeSteps += 1;\n            this.fadeCells();\n            this.drawCells(cells);\n        }\n        setTimeout(() => { this.drawFromStack(); });\n    }\n\n    initLife() {\n        this.canvas = document.getElementById('life');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvasWidth = this.canvas.width;\n        this.canvasHeight = this.canvas.height;\n        this.spaceWidth = Math.floor(this.canvasWidth / this.cellSize);\n        this.spaceHeight = Math.floor(this.canvasHeight / this.cellSize);\n\n        this.offScreenCanvas = document.createElement('canvas');\n        this.offScreenCanvas.width = this.canvasWidth;\n        this.offScreenCanvas.height = this.canvasHeight;\n        this.ctxOffscreen = this.offScreenCanvas.getContext('2d');\n\n        this.liferules = [\n            false, false, false, true, false, false, false, false, false, false,\n            false, false, true, true, false, false, false, false, false\n        ];\n        this.lifeSteps = 0; // Number of iterations / steps done\n        this.prevSteps = 0;\n        this.lfWs.init(this.spaceWidth, this.spaceHeight, this.liferules, this.cellSize);\n        this.drawFromStack();\n        this.speedHandle = setInterval(() => { this.countGenerations(); }, 1000);\n    }\n\n    addListeners() {\n        this.ea.subscribe('startRandom', () => {\n            this.initLife();\n        });\n        this.ea.subscribe('stop', () => {\n            this.lfWs.stop();\n        });\n        this.ea.subscribe('step', () => {\n            this.lfWs.getBatch();\n        });\n    }\n\n    attached() {\n        this.addListeners();\n    }\n\n\n}","export class MainCustomElement {\n    constructor() {\n\n    }\n}","import {\n    inject\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\nexport class StatsCustomElement {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n        this.speed = 0;\n        this.stackSize = 0;\n    }\n\n    addListeners() {\n        this.ea.subscribe('stats', response => {\n            this.speed = response.speed;\n            this.stackSize = response.stackSize;\n        });\n    }\n\n    attached() {\n        this.addListeners();\n    }\n\n}","import {\n    inject,\n    bindable\n} from 'aurelia-framework';\nimport {\n    EventAggregator\n} from 'aurelia-event-aggregator';\n\n@inject(EventAggregator)\n\nexport class LifeWorkerService {\n\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n\n        this._lifeStack = [];\n        this.stackCheckHandle = null;\n        this.stackLowCheckHandle = null;\n        this.wrkr = new Worker('./assets/life-worker.js');\n        this.wrkr.onmessage = (e) => {\n            if (e.data) {\n                let message = e.data.message;\n                switch (message) {\n                    case 'newGeneration':\n                        // push Generation on stack\n                        this._lifeStack.push(e.data.cells);\n                        break;\n                    case 'ready':\n                        this.keepStack();\n                        break;\n                    default:\n                        break;\n                }\n            }\n            // this.ea.publish('newGeneration', e.data);\n        };\n    }\n\n    get cells() {\n        return this._lifeStack.shift();\n    }\n\n    get stackSize() {\n        return this._lifeStack.length;\n    }\n\n    init(w, h, rules, cellSize, cells) {\n        this.rules = rules;\n        this.cellSize = cellSize;\n        let workerData = {\n            message: 'start',\n            w: w,\n            h: h,\n            rules: rules,\n            generations: 5 * this.cellSize,\n            cells: cells\n        };\n        this.wrkr.postMessage(workerData);\n    }\n\n    keepStack() {\n        let minStackSize = 5 * this.cellSize;\n        this.stackCheckHandle = setInterval(() => {\n            if (this._lifeStack.length < minStackSize) {\n                console.log('getBatch');\n                this.getBatch();\n                clearInterval(this.stackCheckHandle);\n            }\n        });\n    }\n\n    stop() {\n        let workerData = {\n            message: 'stop',\n        };\n        this.wrkr.postMessage(workerData);\n    }\n\n    getBatch(cells) {\n        let workerData = {\n            message: 'resume',\n            rules: this.rules,\n            generations: 5 * this.cellSize,\n            cells: cells\n        };\n        this.wrkr.postMessage(workerData);\n    }\n\n}\n"],"sourceRoot":"../src"}